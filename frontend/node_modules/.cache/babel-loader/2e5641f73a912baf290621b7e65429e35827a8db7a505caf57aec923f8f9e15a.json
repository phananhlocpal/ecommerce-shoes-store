{"ast":null,"code":"import axios from 'axios';\nimport { variables } from './variables.js';\nimport jwtDecode from 'jwt-decode';\nconst API_URL = variables.CUSTOMER_API;\nconst API_URL_AUTHEN = variables.AUTHEN_API;\nconst API_URL_CART = variables.CART_API;\nconst getUsers = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\nconst getUser = async userId => {\n  console.log('userId', userId);\n  const response = await axios.get(`${API_URL}/${userId}`);\n  return response.data;\n};\nconst createUser = async user => {\n  const response = await axios.post(API_URL, user);\n  return response.data;\n};\nconst updateUser = async (userId, user) => {\n  const response = await axios.put(`${API_URL}/${userId}`, user);\n  return response.data;\n};\nconst deleteUser = async userId => {\n  const response = await axios.delete(`${API_URL}/${userId}`);\n  return response.data;\n};\nconst getCartByUserId = async userId => {\n  try {\n    const response = await axios.get(`${API_URL_CART}/${userId}`);\n    console.log('response', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    return null;\n  }\n};\nconst login = async loginData => {\n  try {\n    const response = await axios.post(`${API_URL_AUTHEN}/login-customer`, loginData);\n    if (response.data.token) {\n      // Lưu thông tin người dùng vào localStorage\n      localStorage.setItem('user', JSON.stringify(response.data));\n\n      // Lấy userId từ response và lấy cartId của người dùng\n      const userId = response.data.id;\n      const cart = await getCartByUserId(userId); // Lấy cartId thông qua userId\n\n      if (cart) {\n        const cartId = cart.cartID;\n        // Lưu cartId vào localStorage hoặc redux state nếu cần\n        localStorage.setItem('cartId', cartId);\n      }\n      return {\n        userId,\n        cartId: cart ? cart.cartID : null\n      };\n    }\n    return {\n      token: null\n    };\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      alert('Invalid email or password');\n    } else {\n      alert('An error occurred');\n    }\n    return {\n      token: null\n    };\n  }\n};\nexport default {\n  login,\n  getUser,\n  getUsers,\n  createUser,\n  updateUser,\n  deleteUser\n};","map":{"version":3,"names":["axios","variables","jwtDecode","API_URL","CUSTOMER_API","API_URL_AUTHEN","AUTHEN_API","API_URL_CART","CART_API","getUsers","response","get","data","getUser","userId","console","log","createUser","user","post","updateUser","put","deleteUser","delete","getCartByUserId","error","login","loginData","token","localStorage","setItem","JSON","stringify","id","cart","cartId","cartID","status","alert"],"sources":["C:/Users/Surface/Documents/Pal/myproject/ecommerce-app-ms-sql-net-react-main/frontend/src/utils/api/userApi.js"],"sourcesContent":["import axios from 'axios';\nimport { variables } from './variables.js';\nimport jwtDecode from 'jwt-decode';\n\nconst API_URL = variables.CUSTOMER_API\nconst API_URL_AUTHEN = variables.AUTHEN_API\nconst API_URL_CART = variables.CART_API;\n\nconst getUsers = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n}\n\nconst getUser = async (userId) => {\n  console.log('userId', userId);\n  const response = await axios.get(`${API_URL}/${userId}`);\n  return response.data;\n}\n\nconst createUser = async (user) => {\n  const response = await axios.post(API_URL, user);\n  return response.data;\n}\n\nconst updateUser = async (userId, user) => {\n  const response = await axios.put(`${API_URL}/${userId}`, user);\n  return response.data;\n}\n\nconst deleteUser = async (userId) => {\n  const response = await axios.delete(`${API_URL}/${userId}`);\n  return response.data;\n}\n\nconst getCartByUserId = async (userId) => {\n  try {\n    const response = await axios.get(`${API_URL_CART}/${userId}`);\n    console.log('response', response.data);\n    return response.data; \n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    return null;\n  }\n};\n\nconst login = async (loginData) => {\n  try {\n    const response = await axios.post(`${API_URL_AUTHEN}/login-customer`, loginData);\n    if (response.data.token) {\n      // Lưu thông tin người dùng vào localStorage\n      localStorage.setItem('user', JSON.stringify(response.data));\n\n      // Lấy userId từ response và lấy cartId của người dùng\n      const userId = response.data.id;\n      const cart = await getCartByUserId(userId); // Lấy cartId thông qua userId\n\n      if (cart) {\n        const cartId = cart.cartID; \n        // Lưu cartId vào localStorage hoặc redux state nếu cần\n        localStorage.setItem('cartId', cartId);\n      }\n      \n      return { userId, cartId: cart ? cart.cartID : null }; \n    }\n    return { token: null };\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      alert('Invalid email or password');\n    } else {\n      alert('An error occurred');\n    }\n    return { token: null };\n  }\n};\n\nexport default {\n  login,\n  getUser,\n  getUsers,\n  createUser,\n  updateUser,\n  deleteUser\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}