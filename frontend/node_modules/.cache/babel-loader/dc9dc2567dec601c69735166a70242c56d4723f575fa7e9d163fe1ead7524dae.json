{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { variables } from '../../utils/api/variables.js';\n\n// Ngưỡng miễn phí giao hàng\nexport const DELIVERY_THRESHOLD = 1200;\n\n// Thunk để tải cart từ database hoặc localStorage\nexport const loadCart = createAsyncThunk('cart/loadCart', async () => {\n  const userFromLS = localStorage.getItem('user');\n  const isAuthenticated = userFromLS.token ? true : false;\n  console.log('isAuthenticated', userFromLS.token);\n  if (isAuthenticated) {\n    const cartID = localStorage.getItem('cartId');\n    const response = await axios.get(`${variables.CART_ITEM_API}/${cartID}`);\n    console.log('response from item database', response.data);\n    return response.data.items || [];\n  } else {\n    const localCart = localStorage.getItem('cartItems');\n    return localCart ? JSON.parse(localCart) : [];\n  }\n});\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    subtotal: 0,\n    delivery: 0,\n    discount: 0,\n    total: 0\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const {\n        product,\n        size,\n        quantity = 1,\n        price\n      } = action.payload;\n      const existingItem = state.items.find(item => item.product.id === product.id && item.size === size);\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({\n          product,\n          size,\n          quantity,\n          price\n        });\n      }\n      const isAuthenticated = localStorage.getItem('user').token !== null;\n      if (isAuthenticated) {\n        axios.post(`${variables.CART_API}`, {\n          items: state.items\n        }).then(() => console.log('Cart saved to database')).catch(err => console.error('Error saving cart:', err));\n      } else {\n        localStorage.setItem('cartItems', JSON.stringify(state.items));\n      }\n    },\n    removeFromCart: (state, action) => {\n      const {\n        product,\n        size\n      } = action.payload;\n      state.items = state.items.filter(item => item.product.id !== product.id || item.size !== size);\n      const isAuthenticated = localStorage.getItem('user').token !== null;\n      if (isAuthenticated) {\n        axios.put(`${variables.CART_API}`, {\n          items: state.items\n        }).then(() => console.log('Cart updated in database')).catch(err => console.error('Error updating cart:', err));\n      } else {\n        localStorage.setItem('cartItems', JSON.stringify(state.items));\n      }\n    },\n    updateQuantity: (state, action) => {\n      const {\n        productId,\n        size,\n        quantity\n      } = action.payload;\n      const cartItemIndex = state.items.findIndex(item => item.product.id === productId && item.size === size);\n      if (cartItemIndex !== -1) {\n        state.items[cartItemIndex].quantity = quantity;\n        const isAuthenticated = localStorage.getItem('user').token !== null;\n        if (isAuthenticated) {\n          axios.put(`${variables.CART_API}`, {\n            items: state.items\n          }).then(() => console.log('Cart updated in database')).catch(err => console.error('Error updating cart:', err));\n        } else {\n          localStorage.setItem('cartItems', JSON.stringify(state.items));\n        }\n      }\n    },\n    clearCart: state => {\n      state.items = [];\n      const isAuthenticated = localStorage.getItem('user').token !== null;\n      if (isAuthenticated) {\n        axios.delete(`${variables.CART_API}`).then(() => console.log('Cart cleared in database')).catch(err => console.error('Error clearing cart:', err));\n      } else {\n        localStorage.removeItem('cartItems');\n      }\n    },\n    calculateSubtotal: state => {\n      const subtotal = state.items.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      if (subtotal >= DELIVERY_THRESHOLD) {\n        state.delivery = 0;\n        state.subtotal = subtotal;\n      } else {\n        state.delivery = 60;\n        state.subtotal = subtotal;\n      }\n    },\n    updateDelivery: (state, action) => {\n      state.delivery = action.payload.deliveryCost;\n    },\n    applyDiscount: (state, action) => {\n      state.discount = action.payload.discount;\n    },\n    getTotal: state => {\n      state.total = state.subtotal - state.subtotal * state.discount + state.delivery;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadCart.fulfilled, (state, action) => {\n      state.items = action.payload;\n    });\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  calculateSubtotal,\n  updateDelivery,\n  applyDiscount,\n  getTotal\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","variables","DELIVERY_THRESHOLD","loadCart","userFromLS","localStorage","getItem","isAuthenticated","token","console","log","cartID","response","get","CART_ITEM_API","data","items","localCart","JSON","parse","cartSlice","name","initialState","subtotal","delivery","discount","total","reducers","addToCart","state","action","product","size","quantity","price","payload","existingItem","find","item","id","push","post","CART_API","then","catch","err","error","setItem","stringify","removeFromCart","filter","put","updateQuantity","productId","cartItemIndex","findIndex","clearCart","delete","removeItem","calculateSubtotal","reduce","acc","updateDelivery","deliveryCost","applyDiscount","getTotal","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/Surface/Documents/Pal/myproject/ecommerce-app-ms-sql-net-react-main/frontend/src/store/reducers/cartSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { variables } from '../../utils/api/variables.js';\n\n// Ngưỡng miễn phí giao hàng\nexport const DELIVERY_THRESHOLD = 1200;\n\n// Thunk để tải cart từ database hoặc localStorage\nexport const loadCart = createAsyncThunk('cart/loadCart', async () => {\n  const userFromLS = localStorage.getItem('user');\n  const isAuthenticated = userFromLS.token ? true : false;\n  console.log('isAuthenticated', userFromLS.token);\n\n  if (isAuthenticated) {\n    const cartID = localStorage.getItem('cartId');\n    const response = await axios.get(`${variables.CART_ITEM_API}/${cartID}`);\n    console.log('response from item database', response.data);\n    return response.data.items || []; \n  } else {\n    const localCart = localStorage.getItem('cartItems');\n    return localCart ? JSON.parse(localCart) : [];\n  }\n});\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    subtotal: 0,\n    delivery: 0,\n    discount: 0,\n    total: 0,\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const { product, size, quantity = 1, price } = action.payload;\n      const existingItem = state.items.find(\n        (item) => item.product.id === product.id && item.size === size\n      );\n\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({ product, size, quantity, price });\n      }\n\n      const isAuthenticated = localStorage.getItem('user').token !== null;\n\n      if (isAuthenticated) {\n        axios\n          .post(`${variables.CART_API}`, { items: state.items })\n          .then(() => console.log('Cart saved to database'))\n          .catch((err) => console.error('Error saving cart:', err));\n      } else {\n        localStorage.setItem('cartItems', JSON.stringify(state.items));\n      }\n    },\n\n    removeFromCart: (state, action) => {\n      const { product, size } = action.payload;\n      state.items = state.items.filter(\n        (item) => item.product.id !== product.id || item.size !== size\n      );\n\n      const isAuthenticated = localStorage.getItem('user').token !== null;\n\n      if (isAuthenticated) {\n        axios\n          .put(`${variables.CART_API}`, { items: state.items })\n          .then(() => console.log('Cart updated in database'))\n          .catch((err) => console.error('Error updating cart:', err));\n      } else {\n        localStorage.setItem('cartItems', JSON.stringify(state.items));\n      }\n    },\n\n    updateQuantity: (state, action) => {\n      const { productId, size, quantity } = action.payload;\n      const cartItemIndex = state.items.findIndex(\n        (item) => item.product.id === productId && item.size === size\n      );\n\n      if (cartItemIndex !== -1) {\n        state.items[cartItemIndex].quantity = quantity;\n\n        const isAuthenticated = localStorage.getItem('user').token !== null;\n\n        if (isAuthenticated) {\n          axios\n            .put(`${variables.CART_API}`, { items: state.items })\n            .then(() => console.log('Cart updated in database'))\n            .catch((err) => console.error('Error updating cart:', err));\n        } else {\n          localStorage.setItem('cartItems', JSON.stringify(state.items));\n        }\n      }\n    },\n\n    clearCart: (state) => {\n      state.items = [];\n\n      const isAuthenticated = localStorage.getItem('user').token !== null;\n\n      if (isAuthenticated) {\n        axios\n          .delete(`${variables.CART_API}`)\n          .then(() => console.log('Cart cleared in database'))\n          .catch((err) => console.error('Error clearing cart:', err));\n      } else {\n        localStorage.removeItem('cartItems');\n      }\n    },\n\n    calculateSubtotal: (state) => {\n      const subtotal = state.items.reduce(\n        (acc, item) => acc + item.price * item.quantity,\n        0\n      );\n\n      if (subtotal >= DELIVERY_THRESHOLD) {\n        state.delivery = 0;\n        state.subtotal = subtotal;\n      } else {\n        state.delivery = 60;\n        state.subtotal = subtotal;\n      }\n    },\n\n    updateDelivery: (state, action) => {\n      state.delivery = action.payload.deliveryCost;\n    },\n\n    applyDiscount: (state, action) => {\n      state.discount = action.payload.discount;\n    },\n\n    getTotal: (state) => {\n      state.total = state.subtotal - state.subtotal * state.discount + state.delivery;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadCart.fulfilled, (state, action) => {\n      state.items = action.payload;\n    });\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  calculateSubtotal,\n  updateDelivery,\n  applyDiscount,\n  getTotal,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}