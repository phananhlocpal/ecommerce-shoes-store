{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchProducts } from '../actions/productActions';\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null,\n  status: 'idle',\n  filter: {\n    minPrice: null,\n    maxPrice: null,\n    sizes: []\n  }\n};\nconst productSlice = createSlice({\n  name: 'product',\n  status: \"idle\",\n  initialState,\n  reducers: {\n    filterProducts: (state, action) => {\n      const {\n        minPrice,\n        maxPrice,\n        sizes\n      } = action.payload;\n      state.products = state.products.filter(product => {\n        const isInPriceRange = (minPrice === null || product.defaultPrice >= minPrice) && (maxPrice === null || product.defaultPrice <= maxPrice);\n        const hasSize = sizes.length === 0 || product.sizes.some(size => sizes.includes(size));\n        return isInPriceRange && hasSize;\n      });\n    },\n    searchProducts: (state, action) => {\n      const query = action.payload.toLowerCase();\n      const originalProducts = state.originalProducts || state.products;\n      const filteredProducts = originalProducts.filter(product => {\n        return product.name.toLowerCase().includes(query) || product.description.toLowerCase().includes(query);\n      });\n      state.products = filteredProducts;\n      state.originalProducts = originalProducts;\n      if (query.length === 0) {\n        state.products = originalProducts;\n        state.originalProducts = null;\n      }\n    }\n  },\n  setLoad: (state, action) => {\n    state.loading = action.payload;\n  },\n  setError: (state, action) => {\n    state.error = action.payload;\n    state.loading = false;\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading';\n      console.log('loading');\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.products = action.payload;\n      console.log(action.payload);\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n      console.log('failed');\n    });\n  }\n});\nexport const {\n  loadProducts,\n  filterProducts,\n  searchProducts,\n  setLoad,\n  setError,\n  removeSelectedProduct,\n  selectedProduct,\n  setProduct\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","fetchProducts","initialState","products","loading","error","status","filter","minPrice","maxPrice","sizes","productSlice","name","reducers","filterProducts","state","action","payload","product","isInPriceRange","defaultPrice","hasSize","length","some","size","includes","searchProducts","query","toLowerCase","originalProducts","filteredProducts","description","setLoad","setError","extraReducers","builder","addCase","pending","console","log","fulfilled","rejected","message","loadProducts","removeSelectedProduct","selectedProduct","setProduct","actions","reducer"],"sources":["C:/Users/Surface/Documents/Pal/myproject/ecommerce-app-ms-sql-net-react-main/frontend/src/store/reducers/productSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchProducts } from '../actions/productActions';\n\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null,\n  status: 'idle',\n  filter: {\n    minPrice: null,\n    maxPrice: null,\n    sizes: [],\n  },\n};\n\nconst productSlice = createSlice({\n  name: 'product',\n  status: \"idle\",\n  initialState,\n  reducers: {\n    filterProducts: (state, action) => {\n      const { minPrice, maxPrice, sizes } = action.payload;\n      state.products = state.products.filter(product => {\n        const isInPriceRange = (minPrice === null || product.defaultPrice >= minPrice) && (maxPrice === null || product.defaultPrice <= maxPrice);\n        const hasSize = sizes.length === 0 || product.sizes.some(size => sizes.includes(size));\n        return isInPriceRange && hasSize;\n      });\n    },   \n    searchProducts: (state, action) => {\n      const query = action.payload.toLowerCase();\n      const originalProducts = state.originalProducts || state.products;\n      const filteredProducts = originalProducts.filter(product => {\n        return (\n          product.name.toLowerCase().includes(query) ||\n          product.description.toLowerCase().includes(query)\n        );\n      });\n      state.products = filteredProducts;\n      state.originalProducts = originalProducts;\n      if (query.length === 0) {\n        state.products = originalProducts;\n        state.originalProducts = null;\n      }\n    },    \n  },\n    setLoad: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    extraReducers: (builder) => {\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.status = 'loading';\n        console.log('loading');\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.products = action.payload;\n        console.log(action.payload);\n      })\n      .addCase(fetchProducts.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n        console.log('failed');\n      });\n  },\n});\n\nexport const {\n  loadProducts,\n  filterProducts,\n  searchProducts,\n  setLoad,\n  setError,\n  removeSelectedProduct,\n  selectedProduct,\n  setProduct,\n} = productSlice.actions;\n\nexport default productSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}