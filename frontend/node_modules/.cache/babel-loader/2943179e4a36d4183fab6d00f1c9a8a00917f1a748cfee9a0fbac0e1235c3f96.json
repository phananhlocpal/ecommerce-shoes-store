{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surface\\\\Documents\\\\Pal\\\\myproject\\\\ecommerce-app-ms-sql-net-react-main\\\\frontend\\\\src\\\\components\\\\checkout\\\\OrderSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { useCart } from \"../../utils/hooks/useCart\";\nimport { selectCurrentUser } from \"../../store/reducers/userSlice\";\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../utils/api/orderApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderSummary(_ref) {\n  _s();\n  let {\n    onPaymentComplete\n  } = _ref;\n  const [usdTotal, setUsdTotal] = useState(null); // Store the converted total in USD\n  const {\n    subtotal,\n    delivery,\n    discount,\n    defaultTotal,\n    clearCart\n  } = useCart();\n  const currentUser = useSelector(selectCurrentUser);\n  const buttonStyles = {\n    layout: 'vertical',\n    color: 'blue',\n    label: 'checkout'\n  };\n  useEffect(() => {\n    // Fetch exchange rate from a currency conversion API\n    const fetchExchangeRate = async () => {\n      try {\n        const response = await fetch('https://api.exchangerate-api.com/v4/latest/VND');\n        const data = await response.json();\n        const vndToUsdRate = data.rates.USD; // Extract the USD rate from the API response\n        const convertedTotal = defaultTotal * vndToUsdRate; // Convert VND to USD\n        setUsdTotal(convertedTotal.toFixed(2)); // Update state with the USD total\n      } catch (error) {\n        console.error('Error fetching exchange rate:', error);\n      }\n    };\n    fetchExchangeRate();\n  }, [defaultTotal]);\n  const onApprovePaypal = async (data, actions) => {\n    const order = await actions.order.capture();\n    console.log('Order details:', order);\n    const email = order.payer.email_address;\n    const transactionId = order.purchase_units[0].payments.captures[0].id;\n    clearCart();\n    alert(`An order confirmation will be sent to email: ${email}. Transaction ID: ${transactionId}.`);\n\n    // Prepare order data\n    const orderData = {\n      totalPrice: defaultTotal,\n      transactionId: transactionId,\n      customerID: currentUser.customerID\n    };\n\n    // Send order data to the backend\n    try {\n      const response = await orderApi.createOrderPaypal(orderData);\n      console.log('Order saved successfully:', response.data);\n      onPaymentComplete();\n    } catch (error) {\n      console.error('Error saving order:', error);\n    }\n  };\n  if (usdTotal === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Subtotal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: subtotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), discount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"-10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: delivery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-between bold\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [defaultTotal, \" VND\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [usdTotal, \" USD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"ASWQENE-qmdKB-AOzSTZFtuJfz8v26F7NxtFgpgAMvDGaeACJBuz6EOXju2d5KlXJ9h2QoJRM6XrpHi_\",\n        currency: \"USD\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        style: buttonStyles,\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [{\n              amount: {\n                currency_code: \"USD\",\n                value: usdTotal\n              }\n            }]\n          });\n        },\n        onApprove: onApprovePaypal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderSummary, \"momg68nCfscNJSrJPW8sECqyjks=\", false, function () {\n  return [useCart, useSelector];\n});\n_c = OrderSummary;\nexport default OrderSummary;\nvar _c;\n$RefreshReg$(_c, \"OrderSummary\");","map":{"version":3,"names":["React","useEffect","useState","PayPalScriptProvider","PayPalButtons","useCart","selectCurrentUser","useSelector","orderApi","jsxDEV","_jsxDEV","OrderSummary","_ref","_s","onPaymentComplete","usdTotal","setUsdTotal","subtotal","delivery","discount","defaultTotal","clearCart","currentUser","buttonStyles","layout","color","label","fetchExchangeRate","response","fetch","data","json","vndToUsdRate","rates","USD","convertedTotal","toFixed","error","console","onApprovePaypal","actions","order","capture","log","email","payer","email_address","transactionId","purchase_units","payments","captures","id","alert","orderData","totalPrice","customerID","createOrderPaypal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","currency","style","createOrder","create","amount","currency_code","value","onApprove","_c","$RefreshReg$"],"sources":["C:/Users/Surface/Documents/Pal/myproject/ecommerce-app-ms-sql-net-react-main/frontend/src/components/checkout/OrderSummary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { useCart } from \"../../utils/hooks/useCart\";\nimport { selectCurrentUser } from \"../../store/reducers/userSlice\";\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../utils/api/orderApi';\n\nfunction OrderSummary({ onPaymentComplete }) {\n  const [usdTotal, setUsdTotal] = useState(null); // Store the converted total in USD\n  const { subtotal, delivery, discount, defaultTotal, clearCart } = useCart();\n  const currentUser = useSelector((selectCurrentUser));\n  const buttonStyles = {\n    layout: 'vertical',\n    color: 'blue',\n    label: 'checkout',\n  };\n\n  useEffect(() => {\n    // Fetch exchange rate from a currency conversion API\n    const fetchExchangeRate = async () => {\n      try {\n        const response = await fetch('https://api.exchangerate-api.com/v4/latest/VND');\n        const data = await response.json();\n        const vndToUsdRate = data.rates.USD; // Extract the USD rate from the API response\n        const convertedTotal = defaultTotal * vndToUsdRate; // Convert VND to USD\n        setUsdTotal(convertedTotal.toFixed(2)); // Update state with the USD total\n      } catch (error) {\n        console.error('Error fetching exchange rate:', error);\n      }\n    };\n\n    fetchExchangeRate();\n  }, [defaultTotal]);\n\n  const onApprovePaypal = async (data, actions) => {\n    const order = await actions.order.capture();\n    console.log('Order details:', order);\n    const email = order.payer.email_address;\n    const transactionId = order.purchase_units[0].payments.captures[0].id;\n    clearCart();\n    alert(`An order confirmation will be sent to email: ${email}. Transaction ID: ${transactionId}.`);\n\n    // Prepare order data\n    const orderData = {\n      totalPrice: defaultTotal,\n      transactionId: transactionId,\n      customerID: currentUser.customerID,\n    };\n\n    // Send order data to the backend\n    try {\n      const response = await orderApi.createOrderPaypal(orderData);\n      console.log('Order saved successfully:', response.data);\n      onPaymentComplete();\n    } catch (error) {\n      console.error('Error saving order:', error);\n    }\n  };\n\n  if (usdTotal === null) {\n    return <div>Loading...</div>; \n  }\n\n  return (\n    <div className='order-summary'>\n      <div className=\"space-between\">\n        <p>Subtotal</p>\n        <p>{subtotal}</p>\n      </div>\n      {discount > 0 && (\n        <div className=\"space-between\">\n          <p>Discount</p>\n          <p>-10%</p>\n        </div>\n      )}\n      <div className=\"space-between\">\n        <p>Delivery</p>\n        <p>{delivery}</p>\n      </div>\n      <div className=\"line\"></div>\n      <div className=\"space-between bold\">\n        <div>\n          <p>Total</p>\n        </div>\n        <div className='items-end'>\n          <p>{defaultTotal} VND</p>\n          <p>{usdTotal} USD</p>\n        </div>\n      </div>\n      <PayPalScriptProvider options={{ \"client-id\": \"ASWQENE-qmdKB-AOzSTZFtuJfz8v26F7NxtFgpgAMvDGaeACJBuz6EOXju2d5KlXJ9h2QoJRM6XrpHi_\", currency: \"USD\" }}>\n        <PayPalButtons\n          style={buttonStyles}\n          createOrder={(data, actions) => {\n            return actions.order.create({\n              purchase_units: [\n                {\n                  amount: {\n                    currency_code: \"USD\",\n                    value: usdTotal, \n                  },\n                },\n              ],\n            });\n          }}\n          onApprove={onApprovePaypal}\n        />\n      </PayPalScriptProvider>\n    </div>\n  );\n}\n\nexport default OrderSummary;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}