{"ast":null,"code":"import axios from 'axios';\nimport { variables } from './variables.js';\nimport jwtDecode from 'jwt-decode';\nconst API_URL = variables.CUSTOMER_API;\nconst API_URL_AUTHEN = variables.AUTHEN_API;\nconst API_URL_CART = variables.CART_API;\nconst API_URL_CART_ITEM = variables.CART_ITEM_API;\nconst getUsers = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\nconst getUser = async userId => {\n  console.log('userId', userId);\n  const response = await axios.get(`${API_URL}/${userId}`);\n  return response.data;\n};\nconst createUser = async user => {\n  const response = await axios.post(API_URL, user);\n  return response.data;\n};\nconst updateUser = async (userId, user) => {\n  const response = await axios.put(`${API_URL}/${userId}`, user);\n  return response.data;\n};\nconst deleteUser = async userId => {\n  const response = await axios.delete(`${API_URL}/${userId}`);\n  return response.data;\n};\nconst login = async loginData => {\n  try {\n    const response = await axios.post(`${API_URL_AUTHEN}/login-customer`, loginData);\n    if (response.data.token) {\n      // Lấy userId từ response và lấy cartId của người dùng\n      const userId = response.data.customer.customerID;\n\n      // Kiểm tra xem session Storage có lưu cartItem hay ko?\n      const data = sessionStorage.getItem('cartItems');\n      console.log('data', data);\n      if (data && Array.isArray(data)) {\n        const cartItems = data.map(item => ({\n          customerId: userId,\n          productSizeID: item.productSizeID,\n          quantity: item.quantity\n        }));\n        try {\n          for (const cartItem of cartItems) {\n            // Gửi từng cartItem lên server\n            await axios.post(`${API_URL_CART_ITEM}/updateSession`, cartItem);\n          }\n\n          // Xóa cartItems khỏi sessionStorage sau khi hoàn thành\n          sessionStorage.removeItem('cartItems');\n          console.log('Cart items have been successfully updated to the server.');\n        } catch (error) {\n          console.error('Error updating cart items to the server:', error);\n        }\n      } else {\n        console.log('No cart items found in sessionStorage.');\n      }\n      return userId;\n    }\n    return {\n      token: null\n    };\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      alert('Invalid email or password');\n    } else {\n      alert('An error occurred');\n    }\n    return {\n      token: null\n    };\n  }\n};\nexport default {\n  login,\n  getUser,\n  getUsers,\n  createUser,\n  updateUser,\n  deleteUser\n};","map":{"version":3,"names":["axios","variables","jwtDecode","API_URL","CUSTOMER_API","API_URL_AUTHEN","AUTHEN_API","API_URL_CART","CART_API","API_URL_CART_ITEM","CART_ITEM_API","getUsers","response","get","data","getUser","userId","console","log","createUser","user","post","updateUser","put","deleteUser","delete","login","loginData","token","customer","customerID","sessionStorage","getItem","Array","isArray","cartItems","map","item","customerId","productSizeID","quantity","cartItem","removeItem","error","status","alert"],"sources":["C:/Users/Surface/Documents/Pal/myproject/ecommerce-app-ms-sql-net-react-main/frontend/src/utils/api/userApi.js"],"sourcesContent":["import axios from 'axios';\nimport { variables } from './variables.js';\nimport jwtDecode from 'jwt-decode';\n\nconst API_URL = variables.CUSTOMER_API\nconst API_URL_AUTHEN = variables.AUTHEN_API\nconst API_URL_CART = variables.CART_API;\nconst API_URL_CART_ITEM = variables.CART_ITEM_API;\n\nconst getUsers = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n}\n\nconst getUser = async (userId) => {\n  console.log('userId', userId);\n  const response = await axios.get(`${API_URL}/${userId}`);\n  return response.data;\n}\n\nconst createUser = async (user) => {\n  const response = await axios.post(API_URL, user);\n  return response.data;\n}\n\nconst updateUser = async (userId, user) => {\n  const response = await axios.put(`${API_URL}/${userId}`, user);\n  return response.data;\n}\n\nconst deleteUser = async (userId) => {\n  const response = await axios.delete(`${API_URL}/${userId}`);\n  return response.data;\n}\n\nconst login = async (loginData) => {\n  try {\n    const response = await axios.post(`${API_URL_AUTHEN}/login-customer`, loginData);\n    if (response.data.token) {\n      // Lấy userId từ response và lấy cartId của người dùng\n      const userId = response.data.customer.customerID;\n\n      // Kiểm tra xem session Storage có lưu cartItem hay ko?\n      const data = sessionStorage.getItem('cartItems');\n      console.log('data', data);\n      if (data && Array.isArray(data)) {\n        const cartItems = data.map((item) => ({\n          customerId: userId,\n          productSizeID: item.productSizeID,\n          quantity: item.quantity,\n        }));\n      \n        try {\n          for (const cartItem of cartItems) {\n            // Gửi từng cartItem lên server\n            await axios.post(`${API_URL_CART_ITEM}/updateSession`, cartItem);\n          }\n      \n          // Xóa cartItems khỏi sessionStorage sau khi hoàn thành\n          sessionStorage.removeItem('cartItems');\n          console.log('Cart items have been successfully updated to the server.');\n        } catch (error) {\n          console.error('Error updating cart items to the server:', error);\n        }\n      } else {\n        console.log('No cart items found in sessionStorage.');\n      }\n      \n      return  userId; \n    }\n    return { token: null };\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      alert('Invalid email or password');\n    } else {\n      alert('An error occurred');\n    }\n    return { token: null };\n  }\n};\n\nexport default {\n  login,\n  getUser,\n  getUsers,\n  createUser,\n  updateUser,\n  deleteUser\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}